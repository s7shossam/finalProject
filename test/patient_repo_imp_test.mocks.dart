// Mocks generated by Mockito 5.4.5 from annotations
// in patient_appointment/test/patient_repo_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:patient_appointment/features/doctor/home/data/data_source/patient_local_data_source/patient_local_data_source.dart'
    as _i3;
import 'package:patient_appointment/features/doctor/home/data/models/appointment_status.dart'
    as _i7;
import 'package:patient_appointment/features/doctor/home/data/models/patient_model.dart'
    as _i5;
import 'package:patient_appointment/features/doctor/home/domain/entities/patien_entity.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePatientEntity_1 extends _i1.SmartFake implements _i2.PatientEntity {
  _FakePatientEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PatientLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientLocalDataSource extends _i1.Mock
    implements _i3.PatientLocalDataSource {
  MockPatientLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.PatientModel>> getPatients() => (super.noSuchMethod(
        Invocation.method(
          #getPatients,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.PatientModel>>.value(<_i5.PatientModel>[]),
      ) as _i4.Future<List<_i5.PatientModel>>);

  @override
  _i4.Future<void> addPatient(_i5.PatientModel? patient) => (super.noSuchMethod(
        Invocation.method(
          #addPatient,
          [patient],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePatient(
    int? index,
    _i5.PatientModel? updatedPatient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePatient,
          [
            index,
            updatedPatient,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> markAsCompleted(int? index) => (super.noSuchMethod(
        Invocation.method(
          #markAsCompleted,
          [index],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> markAsMissed(int? index) => (super.noSuchMethod(
        Invocation.method(
          #markAsMissed,
          [index],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [PatientModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientModel extends _i1.Mock implements _i5.PatientModel {
  MockPatientModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get age => (super.noSuchMethod(
        Invocation.getter(#age),
        returnValue: 0,
      ) as int);

  @override
  set age(int? _age) => super.noSuchMethod(
        Invocation.setter(
          #age,
          _age,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get gender => (super.noSuchMethod(
        Invocation.getter(#gender),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#gender),
        ),
      ) as String);

  @override
  set gender(String? _gender) => super.noSuchMethod(
        Invocation.setter(
          #gender,
          _gender,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get appointmentTime => (super.noSuchMethod(
        Invocation.getter(#appointmentTime),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#appointmentTime),
        ),
      ) as DateTime);

  @override
  set appointmentTime(DateTime? _appointmentTime) => super.noSuchMethod(
        Invocation.setter(
          #appointmentTime,
          _appointmentTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get imageUrl => (super.noSuchMethod(
        Invocation.getter(#imageUrl),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#imageUrl),
        ),
      ) as String);

  @override
  set imageUrl(String? _imageUrl) => super.noSuchMethod(
        Invocation.setter(
          #imageUrl,
          _imageUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.AppointmentStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i7.AppointmentStatus.pending,
      ) as _i7.AppointmentStatus);

  @override
  set status(_i7.AppointmentStatus? _status) => super.noSuchMethod(
        Invocation.setter(
          #status,
          _status,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isInBox => (super.noSuchMethod(
        Invocation.getter(#isInBox),
        returnValue: false,
      ) as bool);

  @override
  _i2.PatientEntity toEntity() => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [],
        ),
        returnValue: _FakePatientEntity_1(
          this,
          Invocation.method(
            #toEntity,
            [],
          ),
        ),
      ) as _i2.PatientEntity);

  @override
  _i4.Future<void> save() => (super.noSuchMethod(
        Invocation.method(
          #save,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
